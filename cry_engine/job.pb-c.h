/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: job.proto */

#ifndef PROTOBUF_C_job_2eproto__INCLUDED
#define PROTOBUF_C_job_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Jobserver__JobRequest Jobserver__JobRequest;
typedef struct _Jobserver__JobReply Jobserver__JobReply;
typedef struct _Jobserver__RsaRequest Jobserver__RsaRequest;
typedef struct _Jobserver__RsaReply Jobserver__RsaReply;
typedef struct _Jobserver__EcdsaSignRequest Jobserver__EcdsaSignRequest;
typedef struct _Jobserver__EcdsaSignReply Jobserver__EcdsaSignReply;
typedef struct _Jobserver__EcdsaVerifyRequest Jobserver__EcdsaVerifyRequest;
typedef struct _Jobserver__EcdsaVerifyReply Jobserver__EcdsaVerifyReply;


/* --- enums --- */


/* --- messages --- */

/*
 * The request message containing the user's name.
 */
struct  _Jobserver__JobRequest
{
  ProtobufCMessage base;
  int32_t optype;
  char *sni;
  ProtobufCBinaryData payload;
};
#define JOBSERVER__JOB_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__job_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * The response message containing the greetings
 */
struct  _Jobserver__JobReply
{
  ProtobufCMessage base;
  int32_t status;
  char *msg;
};
#define JOBSERVER__JOB_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__job_reply__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * The request message containing the user's name.
 */
struct  _Jobserver__RsaRequest
{
  ProtobufCMessage base;
  int32_t optype;
  char *sni;
  ProtobufCBinaryData payload;
};
#define JOBSERVER__RSA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__rsa_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * The response message containing the greetings
 */
struct  _Jobserver__RsaReply
{
  ProtobufCMessage base;
  int32_t status;
  char *msg;
};
#define JOBSERVER__RSA_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__rsa_reply__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  _Jobserver__EcdsaSignRequest
{
  ProtobufCMessage base;
  int32_t optype;
  char *sni;
  ProtobufCBinaryData digest;
};
#define JOBSERVER__ECDSA_SIGN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__ecdsa_sign_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL} }


struct  _Jobserver__EcdsaSignReply
{
  ProtobufCMessage base;
  int32_t status;
  char *msg;
  ProtobufCBinaryData r;
  ProtobufCBinaryData s;
};
#define JOBSERVER__ECDSA_SIGN_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__ecdsa_sign_reply__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL}, {0,NULL} }


struct  _Jobserver__EcdsaVerifyRequest
{
  ProtobufCMessage base;
  int32_t optype;
  char *sni;
  ProtobufCBinaryData digest;
  ProtobufCBinaryData r;
  ProtobufCBinaryData s;
};
#define JOBSERVER__ECDSA_VERIFY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__ecdsa_verify_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL}, {0,NULL}, {0,NULL} }


struct  _Jobserver__EcdsaVerifyReply
{
  ProtobufCMessage base;
  int32_t status;
  char *msg;
  protobuf_c_boolean verify;
};
#define JOBSERVER__ECDSA_VERIFY_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jobserver__ecdsa_verify_reply__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0 }


/* Jobserver__JobRequest methods */
void   jobserver__job_request__init
                     (Jobserver__JobRequest         *message);
size_t jobserver__job_request__get_packed_size
                     (const Jobserver__JobRequest   *message);
size_t jobserver__job_request__pack
                     (const Jobserver__JobRequest   *message,
                      uint8_t             *out);
size_t jobserver__job_request__pack_to_buffer
                     (const Jobserver__JobRequest   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__JobRequest *
       jobserver__job_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__job_request__free_unpacked
                     (Jobserver__JobRequest *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__JobReply methods */
void   jobserver__job_reply__init
                     (Jobserver__JobReply         *message);
size_t jobserver__job_reply__get_packed_size
                     (const Jobserver__JobReply   *message);
size_t jobserver__job_reply__pack
                     (const Jobserver__JobReply   *message,
                      uint8_t             *out);
size_t jobserver__job_reply__pack_to_buffer
                     (const Jobserver__JobReply   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__JobReply *
       jobserver__job_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__job_reply__free_unpacked
                     (Jobserver__JobReply *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__RsaRequest methods */
void   jobserver__rsa_request__init
                     (Jobserver__RsaRequest         *message);
size_t jobserver__rsa_request__get_packed_size
                     (const Jobserver__RsaRequest   *message);
size_t jobserver__rsa_request__pack
                     (const Jobserver__RsaRequest   *message,
                      uint8_t             *out);
size_t jobserver__rsa_request__pack_to_buffer
                     (const Jobserver__RsaRequest   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__RsaRequest *
       jobserver__rsa_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__rsa_request__free_unpacked
                     (Jobserver__RsaRequest *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__RsaReply methods */
void   jobserver__rsa_reply__init
                     (Jobserver__RsaReply         *message);
size_t jobserver__rsa_reply__get_packed_size
                     (const Jobserver__RsaReply   *message);
size_t jobserver__rsa_reply__pack
                     (const Jobserver__RsaReply   *message,
                      uint8_t             *out);
size_t jobserver__rsa_reply__pack_to_buffer
                     (const Jobserver__RsaReply   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__RsaReply *
       jobserver__rsa_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__rsa_reply__free_unpacked
                     (Jobserver__RsaReply *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__EcdsaSignRequest methods */
void   jobserver__ecdsa_sign_request__init
                     (Jobserver__EcdsaSignRequest         *message);
size_t jobserver__ecdsa_sign_request__get_packed_size
                     (const Jobserver__EcdsaSignRequest   *message);
size_t jobserver__ecdsa_sign_request__pack
                     (const Jobserver__EcdsaSignRequest   *message,
                      uint8_t             *out);
size_t jobserver__ecdsa_sign_request__pack_to_buffer
                     (const Jobserver__EcdsaSignRequest   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__EcdsaSignRequest *
       jobserver__ecdsa_sign_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__ecdsa_sign_request__free_unpacked
                     (Jobserver__EcdsaSignRequest *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__EcdsaSignReply methods */
void   jobserver__ecdsa_sign_reply__init
                     (Jobserver__EcdsaSignReply         *message);
size_t jobserver__ecdsa_sign_reply__get_packed_size
                     (const Jobserver__EcdsaSignReply   *message);
size_t jobserver__ecdsa_sign_reply__pack
                     (const Jobserver__EcdsaSignReply   *message,
                      uint8_t             *out);
size_t jobserver__ecdsa_sign_reply__pack_to_buffer
                     (const Jobserver__EcdsaSignReply   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__EcdsaSignReply *
       jobserver__ecdsa_sign_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__ecdsa_sign_reply__free_unpacked
                     (Jobserver__EcdsaSignReply *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__EcdsaVerifyRequest methods */
void   jobserver__ecdsa_verify_request__init
                     (Jobserver__EcdsaVerifyRequest         *message);
size_t jobserver__ecdsa_verify_request__get_packed_size
                     (const Jobserver__EcdsaVerifyRequest   *message);
size_t jobserver__ecdsa_verify_request__pack
                     (const Jobserver__EcdsaVerifyRequest   *message,
                      uint8_t             *out);
size_t jobserver__ecdsa_verify_request__pack_to_buffer
                     (const Jobserver__EcdsaVerifyRequest   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__EcdsaVerifyRequest *
       jobserver__ecdsa_verify_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__ecdsa_verify_request__free_unpacked
                     (Jobserver__EcdsaVerifyRequest *message,
                      ProtobufCAllocator *allocator);
/* Jobserver__EcdsaVerifyReply methods */
void   jobserver__ecdsa_verify_reply__init
                     (Jobserver__EcdsaVerifyReply         *message);
size_t jobserver__ecdsa_verify_reply__get_packed_size
                     (const Jobserver__EcdsaVerifyReply   *message);
size_t jobserver__ecdsa_verify_reply__pack
                     (const Jobserver__EcdsaVerifyReply   *message,
                      uint8_t             *out);
size_t jobserver__ecdsa_verify_reply__pack_to_buffer
                     (const Jobserver__EcdsaVerifyReply   *message,
                      ProtobufCBuffer     *buffer);
Jobserver__EcdsaVerifyReply *
       jobserver__ecdsa_verify_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jobserver__ecdsa_verify_reply__free_unpacked
                     (Jobserver__EcdsaVerifyReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Jobserver__JobRequest_Closure)
                 (const Jobserver__JobRequest *message,
                  void *closure_data);
typedef void (*Jobserver__JobReply_Closure)
                 (const Jobserver__JobReply *message,
                  void *closure_data);
typedef void (*Jobserver__RsaRequest_Closure)
                 (const Jobserver__RsaRequest *message,
                  void *closure_data);
typedef void (*Jobserver__RsaReply_Closure)
                 (const Jobserver__RsaReply *message,
                  void *closure_data);
typedef void (*Jobserver__EcdsaSignRequest_Closure)
                 (const Jobserver__EcdsaSignRequest *message,
                  void *closure_data);
typedef void (*Jobserver__EcdsaSignReply_Closure)
                 (const Jobserver__EcdsaSignReply *message,
                  void *closure_data);
typedef void (*Jobserver__EcdsaVerifyRequest_Closure)
                 (const Jobserver__EcdsaVerifyRequest *message,
                  void *closure_data);
typedef void (*Jobserver__EcdsaVerifyReply_Closure)
                 (const Jobserver__EcdsaVerifyReply *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Jobserver__JobServer_Service Jobserver__JobServer_Service;
struct _Jobserver__JobServer_Service
{
  ProtobufCService base;
  void (*say_hello)(Jobserver__JobServer_Service *service,
                    const Jobserver__JobRequest *input,
                    Jobserver__JobReply_Closure closure,
                    void *closure_data);
};
typedef void (*Jobserver__JobServer_ServiceDestroy)(Jobserver__JobServer_Service *);
void jobserver__job_server__init (Jobserver__JobServer_Service *service,
                                  Jobserver__JobServer_ServiceDestroy destroy);
#define JOBSERVER__JOB_SERVER__BASE_INIT \
    { &jobserver__job_server__descriptor, protobuf_c_service_invoke_internal, NULL }
#define JOBSERVER__JOB_SERVER__INIT(function_prefix__) \
    { JOBSERVER__JOB_SERVER__BASE_INIT,\
      function_prefix__ ## say_hello  }
void jobserver__job_server__say_hello(ProtobufCService *service,
                                      const Jobserver__JobRequest *input,
                                      Jobserver__JobReply_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor jobserver__job_request__descriptor;
extern const ProtobufCMessageDescriptor jobserver__job_reply__descriptor;
extern const ProtobufCMessageDescriptor jobserver__rsa_request__descriptor;
extern const ProtobufCMessageDescriptor jobserver__rsa_reply__descriptor;
extern const ProtobufCMessageDescriptor jobserver__ecdsa_sign_request__descriptor;
extern const ProtobufCMessageDescriptor jobserver__ecdsa_sign_reply__descriptor;
extern const ProtobufCMessageDescriptor jobserver__ecdsa_verify_request__descriptor;
extern const ProtobufCMessageDescriptor jobserver__ecdsa_verify_reply__descriptor;
extern const ProtobufCServiceDescriptor jobserver__job_server__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_job_2eproto__INCLUDED */
